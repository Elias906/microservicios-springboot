spring.application.name=api-gateway2
server.port=8079

#Eureka Server
eureka.client.service-url.default-zone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#Cliente service routes
spring.cloud.gateway.routes[0].id=cliente-service
#spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].uri=lb://cliente-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/cliente/**


#Insumo service routes
spring.cloud.gateway.routes[1].id=insumo-service
#spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].uri=lb://insumo-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/insumos/**

#Proveedor service routes
spring.cloud.gateway.routes[2].id=proveedor-service
#spring.cloud.gateway.routes[2].uri=http://localhost:8083
spring.cloud.gateway.routes[2].uri=lb://proveedor-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/proveedores/**

# Proveedor service routes (SOAP)
spring.cloud.gateway.routes[3].id=proveedor-service
spring.cloud.gateway.routes[3].uri=lb://proveedor-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/ws/proveedor/**
spring.cloud.gateway.routes[3].filters[0]=SetRequestHeader=Content-Type,text/xml

# Cliente service routes (SOAP)
spring.cloud.gateway.routes[4].id=cliente-service
spring.cloud.gateway.routes[4].uri=lb://cliente-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/ws/cliente/**
spring.cloud.gateway.routes[4].filters[0]=SetRequestHeader=Content-Type,text/xml

#Log
logging.level.root=info
logging.level.org.springframework.cloud.gateway=trace
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator=info

#JWT
jwt.secret=yE2cU6jIE0D7gDpdJqVlFwEIrJ8aW5F0vU2rOEPsz8WJT4fccTwG72sauTfFvl9B
spring.main.web-application-type=reactive
spring.main.allow-bean-definition-overriding=true

spring.security.user.name=user
spring.security.user.password=pass
#spring.cloud.config.server.bootstrap=true

#spring.cloud.config.server.git.uri=https://github.com/igorkosandyak/demo-config-server.git

#Habilitar CORS para PORT 3000
spring:
    cloud:
        gateway:
            globalcors:
                corsConfigurations:
                    '[/**]':
                        allowedOrigins:
                            - "http://localhost:3000"
                        allowedMethods:
                            - GET
                            - POST
                            - PUT
                            - DELETE
                            - OPTIONS
                        allowedHeaders:
                            - "*"
                        exposedHeaders:
                            - "*"
                        allowCredentials: true